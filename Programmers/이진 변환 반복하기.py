'''
문제 설명
0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다.

x의 모든 0을 제거합니다.
x의 길이를 c라고 하면, x를 c를 2진법으로 표현한 문자열로 바꿉니다.
예를 들어, x = "0111010"이라면, x에 이진 변환을 가하면 x = "0111010" -> "1111" -> "100" 이 됩니다.

0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 1이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요.

제한사항
s의 길이는 1 이상 150,000 이하입니다.
s에는 '1'이 최소 하나 이상 포함되어 있습니다.


link : https://programmers.co.kr/learn/courses/30/lessons/70129
'''

def solution(s):
    answer = [0,0]
    s = '0b' + s
    # 2진수를 10진수로 변환할 때 int('110', 2)와 같은 형태면 변환이 가능하다.
    # 굳이 '0b'가 앞에 포함되어있지 않아도 되지만, 
    # bin(10진수)를 하였을 때 '0b123'과 같은 형태로 변환되기에
    # while문을 실행할 때를 위해 통일성을 주었다.

    while s != '0b1' :
        answer[1] += (s.count('0') - 1)
        # s에서 0을 제거하고, 0의 개수만큼 answer[1]에 더하는데,
        # s에 '0b'가 추가되어있기 때문에 0의 개수에서 하나를 빼준 값을 더한다.
        
        answer[0] += 1

        s = bin(len(s.replace("0", ""))-1)
        # s를 s에서 0을 뺏을 때의 길이를 다시 2진수로 변환한 값으로 변환하는데,
        # 위와 마찬가지로 0을 제거한 s를 제거했을 때 'b1101'과 같은 형태이므로,
        # 길이에서 1을 뺀 값을 2진수로 변환한다.

    return answer

print(solution("110010101001"))