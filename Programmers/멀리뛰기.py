'''
문제 설명
효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
(1칸, 1칸, 1칸, 1칸)
(1칸, 2칸, 1칸)
(1칸, 1칸, 2칸)
(2칸, 1칸, 1칸)
(2칸, 2칸)
의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다. 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요. 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

제한 사항
n은 1 이상, 2000 이하인 정수입니다.

link : https://programmers.co.kr/learn/courses/30/lessons/12914
'''

# 1번 칸을 갈 수 있는 경우의 수는 1 (0 -> 1)
# 2번 칸을 갈 수 있는 경우의 수는 2 (0 -> 2, 1 -> 2)
# 3번 칸을 갈 수 있는 경우의 수는 3 (1 -> 3, 2 -> 1) ==> 1번칸을 갈 수 있는 경우의 수 : 1, 2번칸을 갈 수 있는 경우의 수 : 2
# 4번 칸을 갈 수 있는 경우의 수는 5 (2 -> 4, 3 -> 1) ==> 2번칸을 갈 수 있는 경우의 수 : 2, 3번칸을 갈 수 있는 경우의 수 : 3

# 위와 같이 n번칸을 갈 수 있는 경우의 수는 n-2번칸을 갈 수 있는 경우의 수 + n-1번칸을 갈 수 있는 경우의 수다.
# f(n) = f(n-2) + f(n-1)

def solution(n):
    answer = [1,2]

    if n in answer :
        return n
    
    for i in range(3, n+1) :
        answer.append(answer[i-3]+answer[i-2])
    
    return answer[-1] % 1234567